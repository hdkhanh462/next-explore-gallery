name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  playwright-tests:
    name: Playwright E2E Tests
    env:
      NEXT_PUBLIC_BASE_URL: "http://localhost:3000" 
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: Restore Next.js Cache
      uses: actions/cache@v4
      id: nextjs-cache
      with:
        path: |
          ${{ github.workspace }}/.next
        # Generate a new cache whenever packages or source files change.
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-
          ${{ runner.os }}-nextjs-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
    - name: Install dependencies
      run: bun install --frozen-lockfile
    - name: Build app
      if: steps.nextjs-cache.outputs.cache-hit != 'true'
      run: bun run build

    - name: Restore Playwright binaries cache
      uses: actions/cache@v4
      id: playwright-cache
      with:
        # Generate a new cache whenever config file change.
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/playwright.config.ts') }}
        path: ~/.cache/ms-playwright
        restore-keys: |
          ${{ runner.os }}-playwright-${{ hashFiles('**/playwright.config.ts') }}
          ${{ runner.os }}-playwright-
    - name: Install Playwright Browsers
      run: bun x playwright install --with-deps
      if: steps.playwright-cache.outputs.cache-hit != 'true'

    - name: Run Playwright tests
      run: bun x playwright test
    # - uses: actions/upload-artifact@v4
    #   if: ${{ !cancelled() }}
    #   with:
    #     name: playwright-report
    #     path: playwright-report/
    #     retention-days: 30
